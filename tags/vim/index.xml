<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vim on blog</title><link>/tags/vim/</link><description>Recent content in vim on blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 24 Oct 2022 01:00:00 +0900</lastBuildDate><atom:link href="/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>技術ブログ的なものをちゃんとやるためのtextlintテンプレートを作った</title><link>/posts/textlint-template/</link><pubDate>Mon, 24 Oct 2022 01:00:00 +0900</pubDate><guid>/posts/textlint-template/</guid><description>このブログ内でわりと自分でもありえないと思えるような微妙な文章を公開していたのを発見して、恥ずかしい思いをしたのでちゃんとした文章になっているかをチェックする仕組みが欲しくなった。 そういうわけで、作った。 kei-s16/techblog-linter-settings 単純にlintしたいだけであれば、 .textlintrc、package-lock.json、 package.json を作業ディレクトリに置いて、 $ npm ci したあと、 $ npx texlint lint対象の日本語テキストファイル すれば、わり</description><content>&lt;p>このブログ内でわりと自分でもありえないと思えるような微妙な文章を公開していたのを発見して、恥ずかしい思いをしたのでちゃんとした文章になっているかをチェックする仕組みが欲しくなった。&lt;/p>
&lt;p>そういうわけで、作った。&lt;br>
&lt;a href="https://github.com/kei-s16/techblog-linter-settings">kei-s16/techblog-linter-settings&lt;/a>&lt;/p>
&lt;p>単純にlintしたいだけであれば、 &lt;code>.textlintrc&lt;/code>、&lt;code>package-lock.json&lt;/code>、 &lt;code>package.json&lt;/code> を作業ディレクトリに置いて、&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ npm ci
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>したあと、&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ npx texlint lint対象の日本語テキストファイル
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>すれば、わりとゆるふわな設定だけど最低限のチェックはしてくれるようになる。&lt;br>
プログラミング用語やサンプルコードが混ざるため、かなりの設定を無効にしているので、必要な人はよきように &lt;code>.textlintrc&lt;/code> を編集してほしい。&lt;/p>
&lt;p>テキストエディタ上でリアルタイムにチェックする方法も一応用意した。&lt;br>
Visual Studio Codeを使っている人は、READMEにあるとおり、&lt;a href="https://marketplace.visualstudio.com/items?itemName=taichi.vscode-textlint">vscode-textlint&lt;/a>を導入するだけでOK。&lt;br>
ただし、OSS版を使っている場合には上記の拡張が使えないので注意。&lt;/p>
&lt;p>私がふだん使っているneovimでは、&lt;a href="https://github.com/mattn/efm-langserver">mattn/efm-langserver&lt;/a>を使って、textlintをLSPとして実行できるようにすることでリアルタイムチェックを有効にする。&lt;br>
設定は&lt;a href="https://raw.githubusercontent.com/kei-s16/dotfiles/master/.config/efm-langserver/config.yaml">こんな感じにしている&lt;/a>。fixをかけるコマンドを追加したりもできるようだけど、そこまでは(いったん)必要としていないので、やらないでおく。&lt;/p>
&lt;p>現状はただの設定ファイル群だが、今後は&lt;/p>
&lt;ul>
&lt;li>GitHub Actions(個人的には&lt;a href="https://dagger.io/">dagger&lt;/a>でやってみたいが)でCI的に実行する&lt;/li>
&lt;li>templateリポジトリにして再利用を容易にする&lt;/li>
&lt;li>lint設定をもうちょっと突き詰める&lt;/li>
&lt;li>技術的な内容以外を書くときの設定も用意しておく&lt;/li>
&lt;/ul>
&lt;p>などしていきたいところ。&lt;/p>
&lt;p>とりあえずはこのブログのリポジトリに今回作ったlint設定を混ぜこんで使ってみている(この記事もlintが効いていて、ここまでに既に数回怒られている)。&lt;br>
現状はlint設定のゆるふわ感以外に特に不満はないが、しばらく使ってみて初めてわかることもあると思うので、ちょっと様子見。&lt;/p></content></item></channel></rss>